-- Def Mapping - Depreciated, any new defenses should be added via add_defense_ex()
g_pDefMapping_head = add_key(g_pDefMapping_head, "safeguard", "safeguard")
g_pDefMapping_head = add_key(g_pDefMapping_head, "potence", "potence")
g_pDefMapping_head = add_key(g_pDefMapping_head, "fortify", "fortify")
g_pDefMapping_head = add_key(g_pDefMapping_head, "ward", "ward")
g_pDefMapping_head = add_key(g_pDefMapping_head, "lifescent", "lifescent")
g_pDefMapping_head = add_key(g_pDefMapping_head, "hover", "hover")
g_pDefMapping_head = add_key(g_pDefMapping_head, "celerity", "celerity")
g_pDefMapping_head = add_key(g_pDefMapping_head, "clarity", "clarity")
g_pDefMapping_head = add_key(g_pDefMapping_head, "deafness", "deafness")
g_pDefMapping_head = add_key(g_pDefMapping_head, "bracing", "brace")
g_pDefMapping_head = add_key(g_pDefMapping_head, "alertness", "alertness on")
g_pDefMapping_head = add_key(g_pDefMapping_head, "levitation", "levitation")
g_pDefMapping_head = add_key(g_pDefMapping_head, "insulation", "insulation")
g_pDefMapping_head = add_key(g_pDefMapping_head, "fangbarrier", "fangbarrier")
g_pDefMapping_head = add_key(g_pDefMapping_head, "miasma", "miasma")
g_pDefMapping_head = add_key(g_pDefMapping_head, "treewatch", "treewatch on")
g_pDefMapping_head = add_key(g_pDefMapping_head, "waterbreathing", "i_eat pear")
g_pDefMapping_head = add_key(g_pDefMapping_head, "simultaneity", "simultaneity")
g_pDefMapping_head = add_key(g_pDefMapping_head, "blindness", "blindness")
g_pDefMapping_head = add_key(g_pDefMapping_head, "endurance", "endurance")
g_pDefMapping_head = add_key(g_pDefMapping_head, "hypersight", "hypersight on")
g_pDefMapping_head = add_key(g_pDefMapping_head, "insomnia", "insomnia")
g_pDefMapping_head = add_key(g_pDefMapping_head, "myrrh", "i_eat myrrh")
g_pDefMapping_head = add_key(g_pDefMapping_head, "shroud", "shroud")
g_pDefMapping_head = add_key(g_pDefMapping_head, "shield", "touch shield")
g_pDefMapping_head = add_key(g_pDefMapping_head, "sidestep", "dodge melee")
g_pDefMapping_head = add_key(g_pDefMapping_head, "jerk", "divert melee")
g_pDefMapping_head = add_key(g_pDefMapping_head, "resistance", "resistance")
g_pDefMapping_head = add_key(g_pDefMapping_head, "demon syphon", "demon syphon")
g_pDefMapping_head = add_key(g_pDefMapping_head, "demon armor", "demon armor")
g_pDefMapping_head = add_key(g_pDefMapping_head, "lifevision", "lifevision")
g_pDefMapping_head = add_key(g_pDefMapping_head, "mindseye", "mindseye")
g_pDefMapping_head = add_key(g_pDefMapping_head, "telesense", "telesense on")
g_pDefMapping_head = add_key(g_pDefMapping_head, "weathering", "weathering")
g_pDefMapping_head = add_key(g_pDefMapping_head, "rebounding", "smoke skullcap")
g_pDefMapping_head = add_key(g_pDefMapping_head, "density", "density")
g_pDefMapping_head = add_key(g_pDefMapping_head, "warmth", "warmth")
g_pDefMapping_head = add_key(g_pDefMapping_head, "mutated", "mutate into lycanthrope")
g_pDefMapping_head = add_key(g_pDefMapping_head, "hardened_bones", "harden bones")
g_pDefMapping_head = add_key(g_pDefMapping_head, "metawake", "metawake on")
g_pDefMapping_head = add_key(g_pDefMapping_head, "nightsight", "nightsight")
g_pDefMapping_head = add_key(g_pDefMapping_head, "thirdeye", "thirdeye")
g_pDefMapping_head = add_key(g_pDefMapping_head, "fireveil", "cast veil")
g_pDefMapping_head = add_key(g_pDefMapping_head, "barkskin", "cast barkskin")
g_pDefMapping_head = add_key(g_pDefMapping_head, "contorionism", "contortionism")
g_pDefMapping_head = add_key(g_pDefMapping_head, "softfocus", "softfocus on")
g_pDefMapping_head = add_key(g_pDefMapping_head, "water weird", "cast waterweird at me")
g_pDefMapping_head = add_key(g_pDefMapping_head, "skywatch", "skywatch on")
g_pDefMapping_head = add_key(g_pDefMapping_head, "thickfur", "thicken fur")
g_pDefMapping_head = add_key(g_pDefMapping_head, "temperance", "frost")
g_pDefMapping_head = add_key(g_pDefMapping_head, "reflection", "cast reflection at me")
g_pDefMapping_head = add_key(g_pDefMapping_head, "venom_resistance", "venom")
g_pDefMapping_head = add_key(g_pDefMapping_head, "hiding", "hide")
g_pDefMapping_head = add_key(g_pDefMapping_head, "tenemecy", "tenemecy")
g_pDefMapping_head = add_key(g_pDefMapping_head, "vigilance", "vigilance on")
g_pDefMapping_head = add_key(g_pDefMapping_head, "flail", "flail quarterstaff")
g_pDefMapping_head = add_key(g_pDefMapping_head, "curseward", "curseward")
g_pDefMapping_head = add_key(g_pDefMapping_head, "chargeshield", "cast chargeshield at me")
g_pDefMapping_head = add_key(g_pDefMapping_head, "soulmask", "soulmask")
g_pDefMapping_head = add_key(g_pDefMapping_head, "thickhide", "thickhide")
g_pDefMapping_head = add_key(g_pDefMapping_head, "truth", "perform truth")
g_pDefMapping_head = add_key(g_pDefMapping_head, "instawake", "instawake")
g_pDefMapping_head = add_key(g_pDefMapping_head, "speed", "speed")
g_pDefMapping_head = add_key(g_pDefMapping_head, "fitness", "fitness")
g_pDefMapping_head = add_key(g_pDefMapping_head, "heatsight", "heatsight")
g_pDefMapping_head = add_key(g_pDefMapping_head, "cloak", "touch cloak")
g_pDefMapping_head = add_key(g_pDefMapping_head, "gripping", "grip")
g_pDefMapping_head = add_key(g_pDefMapping_head, "efreeti", "cast efreeti at me")
g_pDefMapping_head = add_key(g_pDefMapping_head, "deathsight", "deathsight")
g_pDefMapping_head = add_key(g_pDefMapping_head, "selfishness", "selfishness")
g_pDefMapping_head = add_key(g_pDefMapping_head, "stonefist", "cast stonefist")
g_pDefMapping_head = add_key(g_pDefMapping_head, "metabolize", "metabolize")
g_pDefMapping_head = add_key(g_pDefMapping_head, "held breath", "hold breath")
g_pDefMapping_head = add_key(g_pDefMapping_head, "lightshield", "evoke lightshield")
g_pDefMapping_head = add_key(g_pDefMapping_head, "rebirth", "evoke rebirth")
g_pDefMapping_head = add_key(g_pDefMapping_head, "heatsight", "heatsight")
g_pDefMapping_head = add_key(g_pDefMapping_head, "angel_summon", "angel summon")
g_pDefMapping_head = add_key(g_pDefMapping_head, "angel_care", "angel care")
g_pDefMapping_head = add_key(g_pDefMapping_head, "angel_empathy", "angel empathy")
g_pDefMapping_head = add_key(g_pDefMapping_head, "inspiration", "perform inspiration")
g_pDefMapping_head = add_key(g_pDefMapping_head, "fireblock", "evoke fireblock")
g_pDefMapping_head = add_key(g_pDefMapping_head, "hood", "raise hood")
g_pDefMapping_head = add_key(g_pDefMapping_head, "damariel_symbol", "paint shield damariel")
g_pDefMapping_head = add_key(g_pDefMapping_head, "disperse", "disperse")
g_pDefMapping_head = add_key(g_pDefMapping_head, "bliss", "perform bliss")
g_pDefMapping_head = add_key(g_pDefMapping_head, "pacing", "pacing on")
g_pDefMapping_head = add_key(g_pDefMapping_head, "enflame", "enflame mace")

-- Monk
add_defense_ex("fitness", "fitness", "^You are utilising your bodily control to make yourself more fit\\.$", "^You inhale deeply, allowing the air to fill your mighty lungs\\.$", true, true, false)
add_defense_ex("constitution", "constitution", "^You are using your superior constitution to prevent nausea\\.$", "^You clench the muscles in your stomach, determined to assert your superior constitution\\.$", true, true, false)
add_defense_ex("regeneration", "regeneration on", "^You are regenerating lost health through the power of Kaido\\.$", "^You begin to concentrate on regeneration of your wounds\\.$", true, false, false)
add_defense_ex("boosting", "boost regeneration", "^Your regeneration is boosted\\.$", "^You call upon your Kai power to boost your health regeneration\\.$", true, false, false)
add_defense_ex("splitting", "split mind", "^Your mind is split, allowing constant meditation\\.$", "^You begin to devote a portion of your Kaido-trained mind to constant, unconscious meditation\\.$", true, true, false)
add_defense_ex("immunity", "immunity", "^Your blood is steeled against poisons\\.$", "^You close your eyes and grit your teeth, feeling the heat of the blood pumping through your veins\\.$", true, true, false)
add_defense_ex("vitality", "vitality", "^You will call upon your fortitude in need\\.$", "^Your body positively glows with health and vitality\\.$", true, true, false)
add_defense_ex("weathering", "weathering", "^You are immune to normal weather\\.$", "^A brief shiver runs through your body\\.$", true, false, false)
add_defense_ex("mindnet", "mindnet on", "^You have cast a mindnet over the local area\\.$", "^You cast an invisible mind net out into the distance, allowing it to settle about the surrounding land\\.$", true, false, false)
add_defense_ex("toughness", "toughness", "^Your skin is toughened\\.$", "^Flexing your muscles, you concentrate on forcing unnatural toughness over the surface of your skin\\.$", true, false, false)
add_defense_ex("resistance", "resistance", "^You are resisting magical damage\\.$", "^You call aloud and feel an aura of resistance shroud itself silently about you\\.$", true, false, false)
add_defense_ex("consciousness", "consciousness on", "^You are maintaining consciousness at all times\\.$", "^You will remain conscious at all times\\.$", true, false, false)
add_defense_ex("heatsight", "heatsight", "^You are sensing the heat of others\\.$", "^As you close your eyes, the lids are backlit with a faint red glow. Opening them once more, heated bodies of those around you are suddenly revealed\\.$", true, false, false)
add_defense_ex("pacing", "pacing on", "^You are paced for bursts of exertion\\.$", "^You begin to pace yourself and prepare for sudden bursts of exertion\\.$", true, true, false)
add_defense_ex("kaitrance", "kai trance", "^You are utilising the trance to store Kai energy\\.$", "^Your mantra is complete - the Kai Trance is upon you\\.$", true, false, false)
add_defense_ex("projectiles", "projectiles on", "^You are alert to incoming projectiles\\.$", "^You look about sharply, poised to avoid all incoming projectiles\\.$", true, false, false)
add_defense_ex("bodyblock", "bdb", "^You are trying to absorb blows to your body\\.$", "", true, true, false)
add_defense_ex("evadeblock", "evb", "^You are using Tekura to evade incoming attacks\\.$", "^You ready yourself to evade incoming blows\\.$", true, true, false)
add_defense_ex("armblock", "asb", "^You will attack the arms of hostile opponents.$", "^You ready yourself to arm block as best you can\\.$", true, true, false)
add_defense_ex("legblock", "lsb", "^You will attack the legs of hostile opponents\\.$", "^You ready yourself to leg block as best you can\\.$", true, true, false)
add_defense_ex("pinchblock", "pnb", "^You will try to pinch block a weakened foe\\.$", "^You ready yourself to pinch block to the best of your ability\\.$", true, true, false)
add_defense_ex("mindcloak", "mindcloak on", "", "^You will now begin to concentrate on cloaking your telepathy\\.$", true, true, false)
add_defense_ex("hypersense", "mind hypersense on", "^You are using your hypersense\\.$", "^You begin detecting mindlock attempts in your local area\\.$", true, true, false)
add_defense_ex("kainet", "mind kainet on", "^You are concentrating on the Kai Net\\.$", "^You will now absorb Kai Energy from the entire local area\\.$", true, true, false)

-- Shaman
add_defense_ex("shaman_spiritsight", "Shaman Spiritsight on", "^You blink your eyes rapidly for a moment as you focus on your knowledge of the spirit.\\.$", "^You are discerning the spirit of others.\\.$", true, false, true)
add_defense_ex("shaman_warding", "Shaman warding", "^You summon forth a ball of lightning to orbit you and ward off your attackers.\\.$", "^A ball of lightning wards your limbs.\\.$", true, true, false)
add_defense_ex("protection", "Shaman protection", "^Using the tip of your quarterstaff, you trace an illuminated rune in the air and summon forth an aura of protection.\\.$", "^A protective rune guards you from harm.\\.$", true, true, false)
add_defense_ex("spiritbond", "Familiar spiritbond on", "^You focus on strengthening the bond between you and your familiar as you entrust your lifeforce unto it.\\.$", "^You share a deepened bond with your familiar.\\.$", true, true, false)
add_defense_ex("tethering", "Familiar tether on", "^A serpent spirit seems to grow more corporeal as you focus on tethering it to this realm.\\.$", "^You are focusing on keeping your familiar tethered to this realm.\\.$", true, true, false)
add_defense_ex("oath_forestwalker", "Oath forestwalker activate", "^You have gained the oath_forestwalker defence.\\.$", "^You have enacted the Oath of the Forestwalker.\\.$", true, true, false)
add_defense_ex("oath_shaman", "Oath elder shaman activate", "^You have gained the oath_shaman defence.\\.$", "^You have enacted the Oath of the Elder Shaman.\\.$", true, true, false)
add_defense_ex("oath_blade", "Oath nature's blade activate", "^You have gained the oath_blade defence.\\.$", "^You have enacted the Oath of the Nature's Blade.\\.$", true, true, false)
add_defense_ex("oath_tranquility", "Oath tranquility activate", "^You have gained the oath_tranquility defence.\\.$", "^You have enacted the Oath of Tranquility.\\.$", true, true, false)
add_defense_ex("oath_primeval", "Oath primeval activate", "^You have gained the oath_primeval defence.\\.$", "^You have enacted the Oath of the Primeval.\\.$", true, true, false)
add_defense_ex("oath_rhythm", "Oath rhythm activate", "^You have gained the oath_rhythm defence.\\.$", "^You have enacted the Oath of the Rhythm.\\.$", true, true, false)
add_defense_ex("oath_durdalis", "Oath durdalis activate", "^You have gained the oath_durdalis defence.\\.$", "^You have enacted the Oath of the Durdalis.\\.$", true, true, false)

-- Preconfigured defup lists

-- :: bdef

defup_table = new_lookup_table()

defup_list = new_string_list()
add_item(defup_list, "deafness")
add_item(defup_list, "blindness")
add_item(defup_list, "waterbreathing")
add_data(defup_table, "herb", defup_list)

defup_list = new_string_list()
add_item(defup_list, "insomnia")
add_item(defup_list, "mindseye")
add_item(defup_list, "fangbarrier")
add_item(defup_list, "rebounding")
add_item(defup_list, "speed")
add_item(defup_list, "thirdeye")
add_item(defup_list, "instawake")
add_item(defup_list, "nightsight")
add_item(defup_list, "sidestep")
add_item(defup_list, "temperance")
add_data(defup_table, "free", defup_list)

defup_list = new_string_list()
add_item(defup_list, "cloak")
add_item(defup_list, "deathsight")
add_data(defup_table, "baleq", defup_list)

defup_list = new_string_list()
add_item(defup_list, "insulation")
add_data(defup_table, "salve", defup_list)

defup_list = new_string_list()
add_item(defup_list, "levitation")
add_item(defup_list, "venom_resistance")
add_data(defup_table, "purg", defup_list)

g_pDefupTables_head = add_data(g_pDefupTables_head, "bdef", defup_table)

-- :: fdef

defup_table = new_lookup_table()

defup_list = new_string_list()
add_item(defup_list, "deafness")
add_item(defup_list, "blindness")
add_item(defup_list, "waterbreathing")
add_data(defup_table, "herb", defup_list)

defup_list = new_string_list()
add_item(defup_list, "insomnia")
add_item(defup_list, "mindseye")
add_item(defup_list, "fangbarrier")
add_item(defup_list, "rebounding")
add_item(defup_list, "speed")
add_item(defup_list, "thirdeye")
add_item(defup_list, "instawake")
add_item(defup_list, "nightsight")
add_item(defup_list, "sidestep")
add_item(defup_list, "temperance")
add_item(defup_list, "warmth")
add_data(defup_table, "free", defup_list)

defup_list = new_string_list()
add_item(defup_list, "cloak")
add_item(defup_list, "deathsight")
add_item(defup_list, "clarity")
add_data(defup_table, "baleq", defup_list)

defup_list = new_string_list()
add_item(defup_list, "insulation")
add_item(defup_list, "density")
add_data(defup_table, "salve", defup_list)

defup_list = new_string_list()
add_item(defup_list, "levitation")
add_item(defup_list, "venom_resistance")
add_data(defup_table, "purg", defup_list)

g_pDefupTables_head = add_data(g_pDefupTables_head, "fdef", defup_table)

-- :: lumdef

defup_table = new_lookup_table()

defup_list = new_string_list()
add_item(defup_list, "deafness")
add_item(defup_list, "blindness")
add_item(defup_list, "waterbreathing")
add_data(defup_table, "herb", defup_list)

defup_list = new_string_list()
add_item(defup_list, "insomnia")
add_item(defup_list, "mindseye")
add_item(defup_list, "fangbarrier")
add_item(defup_list, "rebounding")
add_item(defup_list, "speed")
add_item(defup_list, "thirdeye")
add_item(defup_list, "instawake")
add_item(defup_list, "nightsight")
add_item(defup_list, "sidestep")
add_item(defup_list, "temperance")
add_item(defup_list, "warmth")
add_item(defup_list, "enflame")
add_data(defup_table, "free", defup_list)

defup_list = new_string_list()
add_item(defup_list, "cloak")
add_item(defup_list, "deathsight")
add_item(defup_list, "clarity")
add_item(defup_list, "angel_summon")
add_item(defup_list, "angel_care")
add_item(defup_list, "angel_empathy")
add_item(defup_list, "heatsight")
add_item(defup_list, "lightshield")
add_item(defup_list, "bliss")
add_item(defup_list, "hood")
add_item(defup_list, "pacing")
add_item(defup_list, "inspiration")
add_item(defup_list, "fireblock")
add_item(defup_list, "damariel_symbol")
add_item(defup_list, "disperse")
add_item(defup_list, "rebirth")
add_data(defup_table, "baleq", defup_list)


defup_list = new_string_list()
add_item(defup_list, "insulation")
add_item(defup_list, "density")
add_data(defup_table, "salve", defup_list)

defup_list = new_string_list()
add_item(defup_list, "venom_resistance")
add_item(defup_list, "levitation")
add_data(defup_table, "purg", defup_list)

g_pDefupTables_head = add_data(g_pDefupTables_head, "lumdef", defup_table)

-- :: lycdef

defup_table = new_lookup_table() 

defup_list = new_string_list()
add_item(defup_list, "deafness")
add_item(defup_list, "blindness")
add_item(defup_list, "waterbreathing")
add_data(defup_table, "herb", defup_list)

defup_list = new_string_list()
add_item(defup_list, "mutated")
add_item(defup_list, "weathering")
add_item(defup_list, "insomnia")
add_item(defup_list, "mindseye")
add_item(defup_list, "fangbarrier")
add_item(defup_list, "rebounding")
add_item(defup_list, "speed")
add_item(defup_list, "thirdeye")
add_item(defup_list, "instawake")
add_item(defup_list, "nightsight")
add_item(defup_list, "sidestep")
add_item(defup_list, "temperance")
add_item(defup_list, "warmth")
add_data(defup_table, "free", defup_list)

defup_list = new_string_list()
add_item(defup_list, "cloak")
add_item(defup_list, "thickhide")
add_item(defup_list, "bracing")
add_item(defup_list, "hardened_bones")
add_item(defup_list, "thickfur")
add_item(defup_list, "clarity")
add_item(defup_list, "heatsight")
add_item(defup_list, "deathsight")
add_data(defup_table, "baleq", defup_list)

defup_list = new_string_list()
add_item(defup_list, "insulation")
add_data(defup_table, "salve", defup_list)

defup_list = new_string_list()
add_item(defup_list, "levitation")
add_item(defup_list, "venom_resistance")
add_data(defup_table, "purg", defup_list)

g_pDefupTables_head = add_data(g_pDefupTables_head, "lycdef", defup_table)